name: pr

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

permissions:
  deployments: none

jobs:
  build-test:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  owasp-zap:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: build api
      run: |
        docker build --tag someapi2:owaspzap ./src/someapi2/
    
    - name: run api
      run: |
        dotnet dev-certs https -ep ${HOME}/.aspnet/https/aspnetapp.pfx -p stupidPassword
        docker run --rm --pull never --publish 80:8080 -e ASPNETCORE_URLS="https://+" -e ASPNETCORE_Kestrel__Certificates__Default__Password="stupidPassword" -e ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx -v ${HOME}/.aspnet/https:/https/ someapi2:owaspzap &
        sleep 5

    - name: Add hostname
      run: |
        # aspnetcore does not add hsts to localhost
        # add hostname to make it act as if deployed
        sudo echo "127.0.0.1 someapi2" | sudo tee -a /etc/hosts

    - name: OWASP ZAP API Scan
      uses: zaproxy/action-api-scan@v0.4.0
      with:
        target: 'http://someapi2/swagger/v1/swagger.json'
        docker_name: 'owasp/zap2docker-stable'
        format: openapi
        allow_issue_writing: false
        fail_action: true

  snyk-docker:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Build a Docker image
      run: docker build --tag someapi2:snykdocker ./src/someapi2/
    
    - name: Run Snyk to check Docker image for vulnerabilities
      uses: snyk/actions/docker@e25b2e6f5658d1bb7a6671b113260f13134cc3af
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: someapi2:snykdocker

  snyk-iac:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    
    - name: bicep-build-output
      uses: Azure/bicep-build-action@v1.0.1
      with:
        bicepFilePath: ./build/main.bicep
        outputFilePath: ./build/main.json

    - name: Run Snyk to check configuration files for security issues
      uses: snyk/actions/iac@14818c4695ecc4045f33c9cee9e795a788711ca4
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        file: ./build/main.json
